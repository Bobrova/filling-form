{"version":3,"sources":["constants/ActionTypes.js","actions/index.js","constants/fields.js","utils/maskDate.js","components/Input/index.js","components/InputForm/index.js","containers/InputContainer.js","components/OutputForm/index.js","containers/OutputContainer.js","components/App/index.js","store/initialState.js","utils/index.js","store/configureStore.js","reducers/index.js","index.js"],"names":["SET_VALUE","setValue","payload","type","types","fields","name","title","surname","address","dateOfBirth","email","phone","AdditionalInformation","maskDate","value","result","replace","slice","length","onePoint","join","Input","handleInputChange","e","props","target","date","text","this","error","placeholder","className","htmlFor","id","onChange","Fragment","Component","InputForm","inputFieldList","actions","Object","values","map","field","key","connect","state","fullDate","dispatch","bindActionCreators","Actions","OutputForm","App","InputContainer","OutputContainer","initialState","data","localStorage","getItem","JSON","parse","getFromStorage","validateValue","test","store","createStore","action","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","stringify","getState","render","document","getElementById"],"mappings":"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","file":"static/js/main.59ee45a3.chunk.js","sourcesContent":["export const SET_VALUE = 'SET_VALUE';\r\n","import * as types from '../constants/ActionTypes';\r\n\r\nexport const setValue = payload => ({ type: types.SET_VALUE, payload });\r\n","export const fields = {\r\n  name: {title: 'Имя', type: 'text'},\r\n  surname: {title: 'Фамилия', type: 'text'},\r\n  address: {title: 'Адрес', type: 'text'},\r\n  dateOfBirth: {title: 'Дата рождения', type: 'text'},\r\n  email: {title: 'Электронная почта', type: 'email'},\r\n  phone: {title: 'Номер телефона', type: 'tel'},\r\n  AdditionalInformation: {title: 'Дополнительная информация', type: 'text'},\r\n}\r\n","const maskDate = (value) => {\r\n  let result = value.replace(/\\D/g, '').slice(0, 8);\r\n  if (result.length !== 0) {\r\n    const onePoint = result.replace(/(\\d{2})(\\d)/, ['$1', '$2'].join('.'));\r\n    const twoPoints = onePoint.replace(/(\\d{2})(\\d)/, ['$1', '$2'].join('.'));\r\n    result = twoPoints;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport default maskDate;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { fields } from '../../constants/fields';\nimport maskDate from '../../utils/maskDate';\nimport './style.css';\n\nclass Input extends Component {\n  handleInputChange = (e) => {\n    const { setValue } = this.props;\n    const { value, name } = e.target;\n    let date = value;\n    if (name === 'dateOfBirth') {\n        date = maskDate(value);\n    }\n    setValue({ title: name, text: date });\n  }\n\n  render() {\n    const { name, error, value } = this.props;\n    let placeholder = '';\n    if (name === 'phone') placeholder = '+7(___)___-__-__';\n    if (name === 'dateOfBirth') placeholder = 'дд.мм.гггг';\n    return (\n        <div className=\"field\">\n          <label htmlFor={name} className=\"field-name\">\n            {fields[name].title}\n          </label>\n          {name === 'AdditionalInformation' ? (\n            <textarea\n              className=\"textarea-text\"\n              name={name}\n              id={name}\n              onChange={this.handleInputChange}\n              value={value}\n            />\n          ) : (\n          <React.Fragment>\n              <input\n                type={fields[name].type}\n                className=\"input-text\"\n                id={name}\n                name={name}\n                onChange={this.handleInputChange}\n                value={value}\n                placeholder={placeholder}\n              />\n              <p className=\"error\">{error}</p>\n          </React.Fragment>\n          )}\n        </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  setValue: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  value: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../Input';\nimport './style.css';\n\nconst InputForm = (props) => {\n  const { inputFieldList, actions } = props;\n  const { setValue } = actions;\n  return (\n    <div className=\"inputContainer\">\n      {Object.values(inputFieldList).map(field => (\n        <Input\n          key={field.title}\n          name={field.title}\n          setValue={setValue}\n          error={field.error}\n          value={field.text}\n        />\n      ))}\n    </div>\n  );\n};\n\nInputForm.propTypes = {\n  actions: PropTypes.object.isRequired,\n  inputFieldList: PropTypes.object.isRequired,\n};\n\nexport default InputForm;\n","import { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as Actions from '../actions';\r\nimport InputForm from '../components/InputForm';\r\n\r\nconst mapStateToProps = state => ({\r\n  inputFieldList: state.fields,\r\n  fullDate: state.fullDate,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(Actions, dispatch),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(InputForm);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nconst OutputForm = props => {\n  const { inputFieldList } = props;\n  return (\n    <div className=\"outputConteiner\">\n      <h2 className=\"headline\">Заявка на что-то</h2>\n      <div className=\"output\">\n        <div className=\"output-personal\">\n          <div className=\"output-personal__item output-person\">\n            <p className=\"output-text\">{inputFieldList.name.text}</p>\n            <p className=\"output-text\">{inputFieldList.surname.text}</p>\n            <p className=\"output-text\">{inputFieldList.dateOfBirth.text}</p>\n          </div>\n          <div className=\"output-personal__item output-contacts\">\n            <p className=\"output-text\">{inputFieldList.phone.text}</p>\n            <p className=\"output-text\">{inputFieldList.email.text}</p>\n            <p className=\"output-text\">{inputFieldList.address.text}</p>\n          </div>\n        </div>\n        <div className=\"output-additional-information\">\n          <p className=\"addInformation\">Дополнительная информация:</p>\n          <p className=\"output-text\">\n            {inputFieldList.AdditionalInformation.text}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nOutputForm.propTypes = {\n  inputFieldList: PropTypes.object.isRequired,\n};\n\nexport default OutputForm;\n","import { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as Actions from '../actions';\r\nimport OutputForm from '../components/OutputForm';\r\n\r\nconst mapStateToProps = state => ({\r\n  inputFieldList: state.fields,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(Actions, dispatch),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(OutputForm);\r\n","import React from 'react';\nimport InputContainer from '../../containers/InputContainer';\nimport OutputContainer from '../../containers/OutputContainer';\nimport './style.css';\n\nfunction App() {\n  return (\n    <section className=\"page\">\n      <InputContainer />\n      <OutputContainer />\n    </section>\n  );\n}\n\nexport default App;\n","const getFromStorage = () => {\r\n  const data = localStorage.getItem('filling-form-3F');\r\n  if (data) {\r\n    return JSON.parse(data);\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const initialState = getFromStorage() || {\r\n  fields: {\r\n    name: {\r\n      title: 'name',\r\n      text: '',\r\n      error: '',\r\n    },\r\n    surname: {\r\n      title: 'surname',\r\n      text: '',\r\n      error: '',\r\n    },\r\n    address: {\r\n      title: 'address',\r\n      text: '',\r\n      error: '',\r\n    },\r\n    dateOfBirth: {\r\n      title: 'dateOfBirth',\r\n      text: '',\r\n      error: '',\r\n    },\r\n    email: {\r\n      title: 'email',\r\n      text: '',\r\n      error: '',\r\n    },\r\n    phone: {\r\n      title: 'phone',\r\n      text: '',\r\n      error: '',\r\n    },\r\n    AdditionalInformation: {\r\n      title: 'AdditionalInformation',\r\n      text: '',\r\n      error: '',\r\n    },\r\n  },\r\n};\r\n","export const validateValue = (text, title) => {\r\n  if (text !== '') {\r\n    if (title === 'name' || title === 'surname') {\r\n      if (/[A-Za-z]/.test(text)) {\r\n        return 'Только русские буквы';\r\n      }\r\n      if (/\\d/.test(text)) {\r\n        return 'Поле не должно содержать цифры';\r\n      }\r\n      if (/^[а-я]{1}/.test(text)) {\r\n        return 'Должно начинаться с большой буквы';\r\n      }\r\n      if (/^[А-Я]+[а-я]?/.test(text)) return '';\r\n      return 'Некорректные данные, только русские буквы начинающиеся с заглавной.';\r\n    }\r\n    if (title === 'dateOfBirth') {\r\n      if (\r\n        /(0[1-9]|[12][0-9]|3[01])[- .](0[1-9]|1[012])[- .](19|20)\\d\\d/.test(\r\n          text,\r\n        )\r\n      ) {\r\n        return '';\r\n      }\r\n      return 'Некоректная дата';\r\n    }\r\n    if (title === 'phone') {\r\n      if (/^\\+7/.test(text) || /^8/.test(text)) {\r\n        if (/^[+]??\\d[\\d(\\\\) -]{4,13}\\d$/.test(text)) {\r\n          return '';\r\n        }\r\n        return 'Некорректный ввод';\r\n      }\r\n      return 'Некорректный ввод. Должно начинаться с +7 или 8 и содержать только цифры';\r\n    }\r\n    if (title === 'email') {\r\n      if (/^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,4})$/.test(text)) {\r\n        return '';\r\n      }\r\n      return 'Введите корректный e-mail.';\r\n    }\r\n  }\r\n};\r\n","import { createStore } from 'redux';\r\nimport reducer from '../reducers';\r\n\r\nexport const store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__\r\n  && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nconst update = () => {\r\n  localStorage.setItem('filling-form-3F', JSON.stringify(store.getState()));\r\n};\r\n\r\nstore.subscribe(update);\r\n","import { SET_VALUE } from '../constants/ActionTypes';\r\nimport { initialState } from '../store/initialState';\r\nimport { validateValue } from '../utils';\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_VALUE:\r\n      return {\r\n        ...state,\r\n        fields: {\r\n          ...state.fields,\r\n          [action.payload.title]: {\r\n            ...state.fields[action.payload.title],\r\n            text: action.payload.text,\r\n            error: validateValue(action.payload.text, action.payload.title),\r\n          },\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport { store } from './store/configureStore';\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}