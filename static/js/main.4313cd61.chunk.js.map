{"version":3,"sources":["constants/ActionTypes.js","actions/index.js","constants/fieldNames.js","utils/maskDate.js","components/Input/index.js","components/InputForm/index.js","containers/InputContainer.js","components/OutputForm/index.js","containers/OutputContainer.js","components/App/index.js","store/initialState.js","utils/index.js","store/configureStore.js","reducers/index.js","index.js"],"names":["SET_VALUE","setValue","payload","type","types","name","surname","address","dateOfBirth","email","phone","AdditionalInformation","maskDate","value","result","replace","slice","length","onePoint","join","Input","handleInputChange","e","props","fullDate","target","date","isfullDate","title","text","this","error","placeholder","Fragment","className","htmlFor","fieldNames","id","onChange","Component","InputForm","actions","inputFieldList","fiel","Object","values","map","field","key","connect","state","fields","dispatch","bindActionCreators","Actions","OutputForm","App","InputContainer","OutputContainer","initialState","data","localStorage","getItem","JSON","parse","getFromStorage","validateValue","test","store","createStore","action","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","stringify","getState","render","document","getElementById"],"mappings":"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","file":"static/js/main.4313cd61.chunk.js","sourcesContent":["export const SET_VALUE = 'SET_VALUE';\r\n","import * as types from '../constants/ActionTypes';\r\n\r\nexport const setValue = payload => ({ type: types.SET_VALUE, payload });\r\n","export const name = 'Имя';\r\nexport const surname = 'Фамилия';\r\nexport const address = 'Адрес';\r\nexport const dateOfBirth = 'Дата рождения';\r\nexport const email = 'Электронная почта';\r\nexport const phone = 'Номер телефона';\r\nexport const AdditionalInformation = 'Дополнительная информация';\r\n","const maskDate = (value) => {\r\n  let result = value.replace(/\\D/g, '').slice(0, 8);\r\n  if (result.length !== 0) {\r\n    let onePoint = result.replace(/(\\d{2})(\\d)/, ['$1', '$2'].join('.'));\r\n    let twoPoints = onePoint.replace(/(\\d{2})(\\d)/, ['$1', '$2'].join('.'));\r\n    result = twoPoints;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport default maskDate;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as fieldNames from '../../constants/fieldNames';\nimport maskDate from '../../utils/maskDate.js';\nimport './style.css';\n\nclass Input extends Component {\n  handleInputChange = (e) => {\n    const { setValue, fullDate } = this.props;\n    const { value, name } = e.target;\n    let date = value;\n    let isfullDate = (date.length >= 10 ) ? true : false;\n    if (name === 'dateOfBirth') {\n      if ((fullDate && !isfullDate) && (!isfullDate && fullDate)) {\n        date = maskDate('');\n      }\n      else {\n        date = maskDate(value);\n      } \n    }\n    setValue({ title: name, text: date, isfullDate: isfullDate});\n  }\n\n  render() {\n    const { name, error, value } = this.props;\n    let placeholder = '';\n    if (name === 'phone') placeholder = \"+7(___)___-__-__\";\n    if (name === 'dateOfBirth') placeholder = \"дд.мм.гггг\"; \n    return (\n      <React.Fragment>\n        {name === \"AdditionalInformation\" ? (\n          <div className=\"item\">\n            <label htmlFor={name} className=\"item-name\">\n              {fieldNames[name]}\n            </label>\n            <textarea\n              className=\"textarea-text\"\n              name={name}\n              id={name}\n              onChange={this.handleInputChange}\n              value={value}\n            />\n          </div>\n        ) : (\n          <div className=\"item\">\n            <label htmlFor={name} className=\"item-name\">\n              {fieldNames[name]}\n            </label>\n            <input\n              type=\"text\"\n              className=\"input-text\"\n              id={name}\n              name={name}\n              onChange={this.handleInputChange}\n              value={value}\n              placeholder={placeholder}\n            />\n            <p className=\"error\">{error}</p>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nInput.propTypes = {\n  setValue: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../Input';\nimport './style.css';\n\nclass InputForm extends Component {\n  render() {\n    const { setValue } = this.props.actions;\n    const { inputFieldList, fiel } = this.props;\n    return (\n      <div className=\"inputContainer\">\n        {Object.values(inputFieldList).map(field => (\n          <Input\n            key={field.title}\n            name={field.title}\n            setValue={setValue}\n            error={field.error}\n            value={field.text}\n            fullDate={fiel.fullDate}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nInputForm.propTypes = {\n  actions: PropTypes.object.isRequired,\n  inputFieldList: PropTypes.object.isRequired,\n};\n\nexport default InputForm;\n","import { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as Actions from '../actions';\r\nimport InputForm from '../components/InputForm';\r\n\r\nconst mapStateToProps = state => ({\r\n  inputFieldList: state.fields,\r\n  fiel: state,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(Actions, dispatch),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(InputForm);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nconst OutputForm = props => {\n  const { inputFieldList } = props;\n  return (\n    <div className=\"outputConteiner\">\n      <h2 className=\"headline\">Заявка на что-то</h2>\n      <div className=\"output\">\n        <div className=\"output-personal\">\n          <div className=\"output-personal__item output-person\">\n            <p className=\"output-text\">{inputFieldList.name.text}</p>\n            <p className=\"output-text\">{inputFieldList.surname.text}</p>\n            <p className=\"output-text\">{inputFieldList.dateOfBirth.text}</p>\n          </div>\n          <div className=\"output-personal__item output-contacts\">\n            <p className=\"output-text\">{inputFieldList.phone.text}</p>\n            <p className=\"output-text\">{inputFieldList.email.text}</p>\n            <p className=\"output-text\">{inputFieldList.address.text}</p>\n          </div>\n        </div>\n        <div className=\"output-additional-information\">\n          <p className=\"addInformation\">Дополнительная информация:</p>\n          <p className=\"output-text\">\n            {inputFieldList.AdditionalInformation.text}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nOutputForm.propTypes = {\n  inputFieldList: PropTypes.object.isRequired,\n};\n\nexport default OutputForm;\n","import { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as Actions from '../actions';\r\nimport OutputForm from '../components/OutputForm';\r\n\r\nconst mapStateToProps = state => ({\r\n  inputFieldList: state.fields,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(Actions, dispatch),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(OutputForm);\r\n","import React from 'react';\nimport InputContainer from '../../containers/InputContainer';\nimport OutputContainer from '../../containers/OutputContainer';\nimport './style.css';\n\nfunction App() {\n  return (\n    <section className=\"page\">\n      <InputContainer />\n      <OutputContainer />\n    </section>\n  );\n}\n\nexport default App;\n","\r\n\r\nconst getFromStorage = (field) => {\r\n  const data = localStorage.getItem('filling-form-3F');\r\n  if (data){\r\n    return JSON.parse(data);\r\n  }\r\n  else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport const initialState = getFromStorage() || {\r\n  fields: {\r\n    name: {\r\n      title: 'name',\r\n      text:  '',\r\n      error: '',\r\n    },\r\n    surname: {\r\n      title: 'surname',\r\n      text:  '',\r\n      error: '',\r\n    },\r\n    address: {\r\n      title: 'address',\r\n      text:  '',\r\n      error: '',\r\n    },\r\n    dateOfBirth: {\r\n      title: 'dateOfBirth',\r\n      text:  '',\r\n      error: '',\r\n    },\r\n    email: {\r\n      title: 'email',\r\n      text:  '',\r\n      error: '',\r\n    },\r\n    phone: {\r\n      title: 'phone',\r\n      text:  '',\r\n      error: '',\r\n    },\r\n    AdditionalInformation: {\r\n      title: 'AdditionalInformation',\r\n      text:  '',\r\n      error: '',\r\n    },\r\n  },\r\n  fullDate: false\r\n};","export const validateValue = (text, title) => {\r\n  if (text !== \"\") {\r\n    switch (title) {\r\n      case \"name\":\r\n        if (/[A-Za-z]/.test(text)) {\r\n          return \"Только русские буквы\";\r\n        }\r\n        if (/\\d/.test(text)) {\r\n          return \"Поле не должно содержать цифры\";\r\n        }\r\n        if (/^[а-я]{1}/.test(text)) {\r\n          return \"Должно начинаться с большой буквы\";\r\n        }\r\n        if (/^[А-Я]+[а-я]?/.test(text)) return \"\";\r\n        else {\r\n          return \"Некорректные данные, только русские буквы начинающиеся с заглавной.\";\r\n        }\r\n      case \"surname\":\r\n        if (/[A-Za-z]/.test(text)) {\r\n          return \"Только русские буквы\";\r\n        }\r\n        if (/\\d/.test(text)) {\r\n          return \"Поле не должно содержать цифры\";\r\n        }\r\n        if (/^[а-я]{1}/.test(text)) {\r\n          return \"Должно начинаться с большой буквы\";\r\n        }\r\n        if (/^[А-Я]+[а-я]?/.test(text)) return \"\";\r\n        else {\r\n          return \"Некорректные данные, только русские буквы начинающиеся с заглавной.\";\r\n        }\r\n      case \"dateOfBirth\":\r\n        if (\r\n          /(0[1-9]|[12][0-9]|3[01])[- .](0[1-9]|1[012])[- .](19|20)\\d\\d/.test(\r\n            text\r\n          )\r\n        ) {\r\n          return \"\";\r\n        } else {\r\n          return \"Некоректная дата\";\r\n        }\r\n      case \"phone\":\r\n        if (/^\\+79/.test(text) || /^89/.test(text)) {\r\n          if (/^\\+79\\d+$/.test(text) || /^89\\d+$/.test(text)) {\r\n            if (/^\\+79\\d{8}/.test(text) || /^89\\d{8}/.test(text)) {\r\n              return \"\";\r\n            } else {\r\n              return \"Некорректная длина\";\r\n            }\r\n          } else {\r\n            return \"Должно содержать только цифры\";\r\n          }\r\n        } else {\r\n          return \"Некорректный ввод. Должно начинаться с +7 или 89 и содержать только цифры\";\r\n        }\r\n      default:\r\n        return \"\";\r\n    }\r\n  } else {\r\n    return \"\";\r\n  }\r\n};","import { createStore } from 'redux';\r\nimport reducer from '../reducers';\r\n\r\nexport const store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__\r\n  && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nconst update = () => {\r\n  localStorage.setItem('filling-form-3F', JSON.stringify(store.getState()));\r\n};\r\n\r\nstore.subscribe(update);","import { SET_VALUE } from '../constants/ActionTypes';\r\nimport { initialState } from '../store/initialState';\r\nimport { validateValue } from '../utils'\r\n\r\nexport default function todos(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_VALUE:\r\n      return {\r\n        ...state,\r\n        fields: {\r\n          ...state.fields,\r\n          [action.payload.title]: { ...state.fields[action.payload.title], text: action.payload.text, error: validateValue(action.payload.text, action.payload.title) },\r\n        },\r\n        fullDate: action.payload.isfullDate,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport { store }from './store/configureStore'\nimport './index.css';\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}